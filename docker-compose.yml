
services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: appointment_booking
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://app_user:app_password@db:5432/appointment_booking
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: your-secret-key-change-in-production
      JWT_SECRET_KEY: your-jwt-secret-key-change-in-production
      MAIL_SERVER: smtp.gmail.com
      MAIL_PORT: 587
      MAIL_USE_TLS: "True"
      MAIL_USE_SSL: "False"
      MAIL_USERNAME: your-email@gmail.com
      MAIL_PASSWORD: your-app-password
      MAIL_DEFAULT_SENDER: your-email@gmail.com
      HOST: 0.0.0.0
      PORT: 5000
      DEBUG: "False"
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    depends_on:
      - app

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - frontend

volumes:
  postgres_data:
  redis_data: